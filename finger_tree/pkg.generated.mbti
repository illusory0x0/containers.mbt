// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/containers/finger_tree"

import(
  "illusory0x0/containers/graphviz"
)

// Values

// Errors

// Types and methods
type FingerTree[A]
fn[A] FingerTree::concat(Self[A], Self[A]) -> Self[A]
fn[A] FingerTree::cons(A, Self[A]) -> Self[A]
fn[A] FingerTree::empty() -> Self[A]
fn[A, B] FingerTree::fold_left(Self[A], B, (B, A) -> B) -> B
fn[A, B] FingerTree::fold_right(Self[A], B, (B, A) -> B) -> B
fn[A] FingerTree::snoc(Self[A], A) -> Self[A]
fn[A : Show] FingerTree::to_leaf_payload_tree(Self[A]) -> @graphviz.LeafPayloadTree
fn[A] FingerTree::uncons(Self[A]) -> ViewLeft[A]

pub enum ViewLeft[A] {
  Nil
  Cons(A, FingerTree[A])
}

// Type aliases

// Traits

