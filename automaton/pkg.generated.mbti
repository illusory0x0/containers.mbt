// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/automaton"

// Values
const Epsilon : Char = 'Îµ'

const EpsilonSymbol : Int = 0

const ToplevelInitialState : Int = 0

// Errors

// Types and methods
pub struct DFA {
  initial : DFAS
  transition : Map[DFAS, Map[Int, DFAS]]
}
fn DFA::output(Self, &Logger) -> Unit // from trait `Show`
fn DFA::to_json(Self) -> Json // from trait `ToJson`
fn DFA::to_string(Self) -> String // from trait `Show`
impl Show for DFA
impl ToJson for DFA

type DFAS
fn DFAS::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn DFAS::op_equal(Self, Self) -> Bool // from trait `Eq`
fn DFAS::output(Self, &Logger) -> Unit // from trait `Show`
fn DFAS::to_json(Self) -> Json // from trait `ToJson`
fn DFAS::to_string(Self) -> String // from trait `Show`
impl Eq for DFAS
impl Show for DFAS
impl ToJson for DFAS

pub(all) enum NFA {
  Symbol(initial~ : Int, Int, final~ : Int)
  Concat(NFA, NFA)
  Choice(initial~ : Int, NFA, NFA, final~ : Int)
  Repeat(initial~ : Int, NFA, final~ : Int)
}
fn NFA::compare(Self, Self) -> Int // from trait `Compare`
fn NFA::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn NFA::op_equal(Self, Self) -> Bool // from trait `Eq`
fn NFA::output(Self, &Logger) -> Unit // from trait `Show`
fn NFA::to_json(Self) -> Json // from trait `ToJson`
fn NFA::to_string(Self) -> String // from trait `Show`
impl Compare for NFA
impl Eq for NFA
impl Show for NFA
impl ToJson for NFA

type NFAT
fn NFAT::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn NFAT::op_equal(Self, Self) -> Bool // from trait `Eq`
fn NFAT::output(Self, &Logger) -> Unit // from trait `Show`
fn NFAT::to_json(Self) -> Json // from trait `ToJson`
fn NFAT::to_string(Self) -> String // from trait `Show`
impl Eq for NFAT
impl Show for NFAT
impl ToJson for NFAT

pub(all) enum Regex {
  Concat(Regex, Regex)
  Choice(Regex, Regex)
  Repeat(Regex)
  Symbol(Int)
}
fn Regex::compare(Self, Self) -> Int // from trait `Compare`
fn Regex::equal(Self, Self) -> Bool // from trait `Eq`
#deprecated
fn Regex::op_equal(Self, Self) -> Bool // from trait `Eq`
fn Regex::output(Self, &Logger) -> Unit // from trait `Show`
fn Regex::to_json(Self) -> Json // from trait `ToJson`
fn Regex::to_string(Self) -> String // from trait `Show`
impl Compare for Regex
impl Eq for Regex
impl Show for Regex
impl ToJson for Regex

// Type aliases

// Traits

